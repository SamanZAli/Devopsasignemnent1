name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend Docker image
        run: docker build -t task-app-backend ./backend

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build frontend Docker image
        run: docker build -t task-app-frontend ./frontend

  build-database:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build database Docker image
        run: docker build -t task-app-database ./database

  run-tests:
    needs: [build-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          cd backend
          npm install

      - name: Run tests
        run: |
          cd backend
          npm test

  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install ESLint
        run: |
          cd backend
          npm install eslint --save-dev

      - name: Run linter
        run: |
          cd backend
          npx eslint .

  sast-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install njsscan
        run: pip install njsscan
        
      - name: Run njsscan
        run: njsscan ./backend

  push-to-dockerhub:
    needs: [build-backend, build-frontend, build-database]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend Docker image
        run: docker build -t task-app-backend ./backend

      - name: Build frontend Docker image
        run: docker build -t task-app-frontend ./frontend

      - name: Build database Docker image
        run: docker build -t task-app-database ./database

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag and push backend image
        run: |
          docker tag task-app-backend ${{ secrets.DOCKERHUB_USERNAME }}/task-app-backend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/task-app-backend:latest

      - name: Tag and push frontend image
        run: |
          docker tag task-app-frontend ${{ secrets.DOCKERHUB_USERNAME }}/task-app-frontend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/task-app-frontend:latest

      - name: Tag and push database image
        run: |
          docker tag task-app-database ${{ secrets.DOCKERHUB_USERNAME }}/task-app-database:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/task-app-database:latest